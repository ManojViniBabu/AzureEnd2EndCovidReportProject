{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid-reporting-111888-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_cases')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessCases",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:07:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_cases_data",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-07T08:07:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_cases_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covidreportingdlsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_country_code')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covidreportingdlsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_cases_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This dataflow  transforms  the raw cases data . ",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cases",
								"type": "DatasetReference"
							},
							"name": "casesSource"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_country_code",
								"type": "DatasetReference"
							},
							"name": "lookupCountryCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_cases",
								"type": "DatasetReference"
							},
							"name": "ProcessedSink"
						}
					],
					"transformations": [
						{
							"name": "FilterOnlyRequired"
						},
						{
							"name": "SelectRequired"
						},
						{
							"name": "PivotCounts"
						},
						{
							"name": "LookupOutput"
						},
						{
							"name": "SelectForSink"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as integer,\n\t\tdate as date,\n\t\trate_14_day as double,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> casesSource\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> lookupCountryCode\ncasesSource filter(upper(trim(continent))=='EUROPE' &&  not(isNull(country_code))) ~> FilterOnlyRequired\nFilterOnlyRequired select(mapColumn(\n\t\tcountry,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tindicator,\n\t\tdaily_count,\n\t\tsource,\n\t\teach(match(name=='date'),\n\t\t\t'reported_date' = $$)\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectRequired\nSelectRequired pivot(groupBy(country,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tsource,\n\t\treported_date),\n\tpivotBy(indicator, ['death', 'confirmed cases']),\n\t{_count} = sum(daily_count),\n\tcolumnNaming: '$V$N',\n\tlateral: true) ~> PivotCounts\nPivotCounts, lookupCountryCode lookup(PivotCounts@country == lookupCountryCode@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupOutput\nLookupOutput select(mapColumn(\n\t\tcountry = PivotCounts@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation = PivotCounts@population,\n\t\t{confirmed cases_count},\n\t\tdeath_count,\n\t\treported_date,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectForSink\nSelectForSink sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['cases.csv'],\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> ProcessedSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_lookup_country_code')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_hospital_admission_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This dataflow transforms  raw hospital admission data",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_hospital_admissions",
								"type": "DatasetReference"
							},
							"name": "SrcHospitalAdmissions"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_country_code",
								"type": "DatasetReference"
							},
							"name": "LkpSrcCountry"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_week_data",
								"type": "DatasetReference"
							},
							"name": "LkpSrcWeekData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_weekly_hospital_admissions",
								"type": "DatasetReference"
							},
							"name": "SinkWeekly"
						},
						{
							"dataset": {
								"referenceName": "ds_processed_daily_hospital_admissions",
								"type": "DatasetReference"
							},
							"name": "SinkDaily"
						}
					],
					"transformations": [
						{
							"name": "SelectRequired"
						},
						{
							"name": "LookupCountry"
						},
						{
							"name": "SplitDailyFromWeekly"
						},
						{
							"name": "AggWeekDate"
						},
						{
							"name": "JoinWeek"
						},
						{
							"name": "PivotDaily"
						},
						{
							"name": "PivotWeekly"
						},
						{
							"name": "SortWeekly"
						},
						{
							"name": "SortDaily"
						},
						{
							"name": "SelectWeekly"
						},
						{
							"name": "SelectDaily"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SrcHospitalAdmissions\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> LkpSrcCountry\nsource(output(\n\t\tdate_key as string,\n\t\tdate as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tday as string,\n\t\tday_name as string,\n\t\tday_of_year as string,\n\t\tweek_of_month as string,\n\t\tweek_of_year as string,\n\t\tmonth_name as string,\n\t\tyear_month as string,\n\t\tyear_week as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> LkpSrcWeekData\nSrcHospitalAdmissions select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\tvalue,\n\t\tsource,\n\t\teach(match(name=='date'),\n\t\t\t'reported_date' = $$),\n\t\teach(match(name=='year_week'),\n\t\t\t'reported_year_week' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequired\nSelectRequired, LkpSrcCountry lookup(SelectRequired@country == LkpSrcCountry@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCountry\nLookupCountry split(indicator=='Weekly new hospital admissions per 100k'||indicator=='Weekly new ICU admissions per 100k',\n\tdisjoint: false) ~> SplitDailyFromWeekly@(Weekly, Daily)\nLkpSrcWeekData aggregate(groupBy(ecdc_year_week = year+'-W'+lpad(week_of_year,2,'0')),\n\tweek_start_date = min(date),\n\t\tweek_end_date = max(date)) ~> AggWeekDate\nSplitDailyFromWeekly@Weekly, AggWeekDate join(reported_year_week == ecdc_year_week,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinWeek\nSplitDailyFromWeekly@Daily pivot(groupBy(SplitDailyFromWeekly@Daily@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\tsource),\n\tpivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),\n\tcount = sum(value),\n\tcolumnNaming: '$N_$V',\n\tlateral: false) ~> PivotDaily\nJoinWeek pivot(groupBy(SplitDailyFromWeekly@Weekly@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\tweek_start_date,\n\t\tweek_end_date,\n\t\tsource),\n\tpivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: false) ~> PivotWeekly\nPivotWeekly sort(desc(reported_year_week, false),\n\tasc(country, false),\n\tcaseInsensitive: true) ~> SortWeekly\nPivotDaily sort(desc(reported_date, true),\n\tasc(country, true),\n\tcaseInsensitive: true) ~> SortDaily\nSortWeekly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\tweek_start_date,\n\t\tweek_end_date,\n\t\t{Weekly new hospital admissions per 100k_count},\n\t\t{Weekly new ICU admissions per 100k_count},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectWeekly\nSortDaily select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\t{count_Daily hospital occupancy},\n\t\t{count_Daily ICU occupancy},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDaily\nSelectWeekly sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkWeekly\nSelectDaily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDaily"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_hospital_admissions')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_country_code')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_week_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_weekly_hospital_admissions')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_daily_hospital_admissions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_week_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covidreportingdlsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_date.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_weekly_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covidreportingdlsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/weekly_hospital_admissions",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_daily_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covidreportingdlsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/daily_hospital_admissions",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}